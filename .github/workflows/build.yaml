name: build

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install OpenShift
        run: |
          export OPENSHIFT_CLIENT_TOOLS=openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit

          echo "Downloading OpenShift client tools..."
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/${OPENSHIFT_CLIENT_TOOLS}.tar.gz && \
              tar -xvzf ${OPENSHIFT_CLIENT_TOOLS}.tar.gz ${OPENSHIFT_CLIENT_TOOLS}/oc ${OPENSHIFT_CLIENT_TOOLS}/kubectl && \
              chmod +x ${PWD}/${OPENSHIFT_CLIENT_TOOLS}/* && \
              sudo mv ${PWD}/${OPENSHIFT_CLIENT_TOOLS}/oc /usr/local/bin/ && \
              sudo mv ${PWD}/${OPENSHIFT_CLIENT_TOOLS}/kubectl /usr/local/bin/ && \
              rm -rf ${OPENSHIFT_CLIENT_TOOLS}.tar.gz ${OPENSHIFT_CLIENT_TOOLS}

          echo "Configuring Docker daemon..."
          sudo echo '{"insecure-registries": ["172.30.0.0/16"]}' | sudo tee /etc/docker/daemon.json > /dev/null

          sudo mount --make-shared /
          sudo service docker restart

          sudo mkdir -p /var/lib/origin/openshift.local.clusterup/
          sudo chown -R ${USER}:${USER} /var/lib/origin/openshift.local.clusterup/

          echo "Starting OpenShift cluster..."
          oc cluster up --base-dir=/var/lib/origin/openshift.local.clusterup/ --enable='-rhel-imagestreams,-sample-templates,-service-catalog,-web-console'
          sleep 10

          oc login -u system:admin

          echo "Waiting for OpenShift cluster..."
          TIMEOUT=0
          TIMEOUT_COUNT=60
          until [ $TIMEOUT -eq $TIMEOUT_COUNT ]; do
            if [ -n "$(oc get nodes | grep Ready)" ]; then
            echo "OpenShift cluster ready"
              break
            fi
            TIMEOUT=$((TIMEOUT+1))
            sleep 5
          done
          if [ $TIMEOUT -eq $TIMEOUT_COUNT ]; then
            echo "Failed to start openshift"
            exit 1
          fi

          echo "Creating atlasmap namespace"
          oc new-project atlasmap
      - name: Install Operator SDK
        run: make install-operator-sdk
      - name: Build AtlasMap Operator
        run: make build
      - name: Test AtlasMap Operator
        run: make test
      - name: Set Release Docker Tag
        uses: olegtarasov/get-tag@v2
      - name: Publish AtlasMap Operator Image
        run: |
          if [[ -z "${GIT_TAG_NAME}" ]]; then
            DOCKER_TAG="latest"
          elif [[ "${GIT_TAG_NAME}" =~ ^[0-9]+(\.[0-9]+){2} ]]; then
            DOCKER_TAG="$GIT_TAG_NAME"
          fi
          if [[ -z "${DOCKER_TAG}" ]]; then
            exit 0
          fi
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin docker.io
          docker tag docker.io/atlasmap/atlasmap-operator:latest docker.io/atlasmap/atlasmap-operator:${DOCKER_TAG}
          docker push docker.io/atlasmap/atlasmap-operator:${DOCKER_TAG} | cat -
